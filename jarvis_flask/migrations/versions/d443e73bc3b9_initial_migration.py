"""Initial migration

Revision ID: d443e73bc3b9
Revises: 
Create Date: 2025-03-27 00:44:06.420452

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd443e73bc3b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # Add the 'role' column with a default value for existing rows
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.String(length=10), nullable=False, server_default='user'))
        batch_op.alter_column('username',
                              existing_type=sa.String(length=50),
                              type_=sa.String(length=150),
                              existing_nullable=False)
        batch_op.alter_column('email',
                              existing_type=sa.String(length=120),
                              type_=sa.String(length=150),
                              existing_nullable=False)
        batch_op.alter_column('password',
                              existing_type=sa.String(length=100),
                              type_=sa.String(length=200),
                              existing_nullable=False)

    # Populate the 'role' column for existing records
    op.execute("UPDATE user SET role = 'user' WHERE role IS NULL")

    # Remove the default value constraint after applying it to existing data
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('role', server_default=None)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('role')

    op.create_table('_alembic_tmp_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), nullable=False),
    sa.Column('password', sa.VARCHAR(length=200), nullable=False),
    sa.Column('role', sa.VARCHAR(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###
